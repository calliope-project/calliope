import:
  - plan.yaml

constraints:
  total_system_cost_max:
    description: >
      Limit total system cost. Conceived for use in SPORES mode to apply a maximum
      relaxation to the system cost compared to the least-cost feasible option.
    foreach: [costs]
    equations:
      - expression: sum(cost, over=[nodes, techs]) <= spores_cost_max * (1 + spores_slack)

global_expressions:
  spores_score_cumulative:
    description: Track SPORES score to include in the model results
    foreach: [nodes, techs, carriers]
    equations:
      - expression: spores_score

objectives:
  min_spores:
    equations:
      - expression: sum(flow_cap * spores_score, over=[nodes, techs, carriers]) + $unmet_demand
    sub_expressions:
      unmet_demand:
        - where: "config.ensure_feasibility=True"
          expression: >-
            sum(
              sum(unmet_demand - unused_supply, over=[carriers, nodes])
              * timestep_weights,
              over=timesteps
            ) * bigM
        - where: "NOT config.ensure_feasibility=True"
          expression: "0"
    sense: minimise
