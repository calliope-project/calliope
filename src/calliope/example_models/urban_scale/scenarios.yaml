##
# Overrides for different example model configuratiions
##
# --8<-- [start:milp]
overrides:
  milp:
    config:
      init.name: "Urban-scale example model with MILP"
      solve.solver_options: { mipgap: 0.05 }
    techs:
      # --8<-- [start:chp]
      chp:
        cap_method: integer
        integer_dispatch: true
        purchased_units_max: 4
        flow_cap_max:
          _REPLACE_: null  # (1)!
        flow_cap_per_unit:
          data: 300
          index: electricity
          dims: carriers
        flow_out_min_relative:
          data: 0.2
          index: electricity
          dims: carriers
        cost_flow_cap.data: 700
        cost_purchase:
          data: 40000
          index: monetary
          dims: costs
      # --8<-- [end:chp]
      # --8<-- [start:boiler]
      boiler:
        cap_method: integer
        purchased_units_max: 1  # i.e., binary variable.
        cost_flow_cap.data: 35
        cost_purchase:
          data: 2000
          index: monetary
          dims: costs
      # --8<-- [end:boiler]
      # --8<-- [start:heat_pipes]
    link_groups:
      heat_pipes:
        force_async_flow: true
      # --8<-- [end:heat_pipes]
# --8<-- [end:milp]

  operate:
    config:
      init.time_subset: ["2005-07-01", "2005-07-10"]
      build.mode: operate
      solve:
        operate_window: 24
        operate_horizon: 48

    nodes:
      X1:
        techs:
          chp.flow_cap_max: 300
          pv.flow_cap_max: 0
          supply_grid_power.flow_cap_max: 40
          supply_gas.flow_cap_max: 700

      X2:
        techs:
          boiler.flow_cap_max: 200
          pv.flow_cap_max: 70
          supply_gas.flow_cap_max: 250

      X3:
        techs:
          boiler.flow_cap_max: 0
          pv.flow_cap_max: 50
          supply_gas.flow_cap_max: 0

    techs:
      X1_to_X2.flow_cap_max: 300
      X1_to_X3.flow_cap_max: 60
      X1_to_N1.flow_cap_max: 300
      N1_to_X2.flow_cap_max: 250
      N1_to_X3.flow_cap_max: 320
