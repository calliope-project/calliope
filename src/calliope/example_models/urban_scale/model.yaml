# --8<-- [start:import]
import: # Import other files from paths relative to this file, or absolute paths
  - "model_config/techs.yaml"
  - "model_config/locations.yaml"
  - "scenarios.yaml"
# --8<-- [end:import]

# --8<-- [start:config]
config:
  init:
    name: Urban-scale example model
    # What version of Calliope this model is intended for
    calliope_version: 0.7.0
    # Time series data path - can either be a path relative to this file, or an absolute path
    time_subset: ["2005-07-01", "2005-07-02"] # Subset of timesteps
    broadcast_param_data: true  # allow single indexed parameter data entries to be broadcast across all index items, if there are multiple entries.

  build:
    mode: plan # Choices: plan, operate
    ensure_feasibility: true # Switching on unmet demand
    add_math: ["additional_math.yaml"]

  solve:
    solver: cbc
# --8<-- [end:config]

# --8<-- [start:parameters]
parameters:
  objective_cost_weights:
    data: 1
    index: monetary
    dims: costs
  # `bigM` sets the scale of unmet demand, which cannot be too high, otherwise the optimisation will not converge
  bigM: 1e6
  cost_interest_rate:
    data: 0.10
    index: monetary
    dims: costs
# --8<-- [end:parameters]

# --8<-- [start:data-tables]
data_tables:
  demand:
    data: data_tables/demand.csv
    rows: timesteps
    columns: [techs, nodes]
    add_dims:
      parameters: sink_use_equals
  pv_resource:
    data: data_tables/pv_resource.csv
    rows: timesteps
    columns: [comment, scaler]
    add_dims:
      parameters: source_use_equals
      techs: pv
    select:
      scaler: per_area
    drop: [comment, scaler]
  export_power:
    data: data_tables/export_power.csv
    rows: timesteps
    columns: nodes
    add_dims:
      parameters: cost_export
      techs: chp
      costs: monetary
      carriers: electricity
# --8<-- [end:data-tables]
