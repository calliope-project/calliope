# yaml-language-server: $schema=https://json-schema.org/draft/2020-12/schema#

$schema: https://json-schema.org/draft/2020-12/schema#
title: Model definition schema
description: All options available to configure a Calliope model.
type: object
additionalProperties: false
$defs:
  unIndexedParamVal:
    type: [string, boolean, number, "null"]
    description: zero-dimensional (i.e., un-indexed) parameter.

  IndexedParamIndex:
    description: >-
      Model dimension members to apply the parameter value(s) to.
      If an array of arrays, sub-arrays must have same length as number of `dims`.
    oneOf:
      - type: [string, integer, number]
      - type: array
        uniqueItems: true
        minItems: 1
        items:
          oneOf:
            - type: array
              minItems: 1
              items:
                type: [string, integer, number]
            - type: [string, integer, number]

  IndexedParamData:
    description: >-
      parameter value(s).
      If data is one value, will be applied to all dimension members.
      If a list, must be same length as the index array.
    oneOf:
      - type: [string, boolean, integer, number, "null"]
      - type: array
        minItems: 1
        items:
          type: [string, boolean, integer, number, "null"]

  IndexedParam:
    type: object
    description: Indexed parameter.
    additionalProperties: false
    required: ["data", "index", "dims"]
    properties:
      data:
        $ref: "#/$defs/IndexedParamData"
      index:
        $ref: "#/$defs/IndexedParamIndex"
      dims:
        description: >-
          Model dimension(s) over which the parameter is indexed.
          Must be same length as the sub-arrays of `index` (if `indexed` does not have any sub-arrays or is simply a single value, `dims` must be of length 1).
        oneOf:
          - type: string
          - type: array
            uniqueItems: true
            minItems: 1
            items:
              type: string
  TechDims:
    dims:
      description: >-
        Model dimension(s) over which the parameter is indexed.
        Must be same length as the sub-arrays of `index` (if `indexed` does not have any sub-arrays or is simply a single value, `dims` must be of length 1).
        Cannot include `techs` or `nodes` as these will be added automatically in preprocessing.
      oneOf:
        - type: string
        - type: array
          uniqueItems: true
          minItems: 1
          items:
            type: string
            not:
              enum: [techs, nodes]

  TechCostDims:
    description: >-
      Model dimension(s) over which the parameter is indexed.
      Must be same length as the sub-arrays of `index` (if `indexed` does not have any sub-arrays or is simply a single value, `dims` must be of length 1).
      Cannot include `techs` or `nodes` as these will be added automatically in preprocessing.
      Must include `costs` as the string or as an element of the array.
    oneOf:
      - type: string
        enum: [costs]
      - type: array
        uniqueItems: true
        minItems: 1
        items:
          type: string
          not:
            enum: [techs, nodes]
        contains:
          const: costs

  TechParamNullNumber:
    oneOf:
      - type: ["null", number]
      - type: object
        description: Indexed tech-level parameter with null/numeric dtype.
        additionalProperties: false
        required: ["data", "index", "dims"]
        properties:
          data:
            description: >-
              parameter value(s).
              If data is one value, will be applied to all dimension members.
              If a list, must be same length as the index array.
            oneOf:
              - type: "null"
              - type: number
                minimum: 0
              - type: array
                minItems: 1
                items:
                  oneOf:
                    - type: "null"
                    - type: number
                      minimum: 0
          index:
            $ref: "#/$defs/IndexedParamIndex"
          dims:
            $ref: "#/$defs/TechDims"

  TechCostNullNumber:
    oneOf:
      - type: ["null", number]
        x-type: float
      - type: object
        description: Indexed tech-level cost.
        additionalProperties: false
        required: ["data", "index", "dims"]
        properties:
          data:
            description: >-
              parameter value(s).
              If data is one value, will be applied to all dimension members.
              If a list, must be same length as the index array.
            oneOf:
              - type: "null"
              - type: number
              - type: array
                minItems: 1
                items:
                  oneOf:
                    - type: "null"
                    - type: number
          index:
            $ref: "#/$defs/IndexedParamIndex"
          dims:
            $ref: "#/$defs/TechCostDims"

  ActiveDef:
    type: boolean
    title: Activated component.
    description:
      If false, the model component (tech/node/link) will not make its way through to preprocessing.
      If a node, links between this node and others, via transmission technologies, will also be deactivated.
    default: true

properties:
  parameters:
    type: object
    description: Calliope model arbitrary parameter definitions.
    additionalProperties: false
    patternProperties:
      '^[^_^\d][\w]*$':
        oneOf:
          - $ref: "#/$defs/unIndexedParamVal"
          - $ref: "#/$defs/IndexedParam"

  techs:
    type: object
    description: Calliope model technology definitions.
    additionalProperties: false
    patternProperties:
      '^[^_^\d][\w]*$':
        type: object
        description: A named technology.
        allOf:
          - required: ["base_tech"]
          - oneOf:
              - required: ["base_tech", "carrier_in", "carrier_out"]
                not:
                  required: ["link_to", "link_from"]
                properties:
                  base_tech: {const: conversion}
              - required: ["base_tech", "carrier_in"]
                not:
                  required: ["carrier_out", "link_to", "link_from"]
                properties:
                  base_tech: {const: demand}

              - required: ["base_tech", "carrier_in", "carrier_out"]
                not:
                  required: ["link_to", "link_from"]
                properties:
                  base_tech: {const: storage}

              - required: ["base_tech", "carrier_out"]
                not:
                  required: ["carrier_in", "link_to", "link_from"]
                properties:
                  base_tech: {const: supply}

              - required:
                  [
                    "base_tech",
                    "link_from",
                    "link_to",
                    "carrier_in",
                    "carrier_out",
                  ]
                properties:
                  base_tech: {const: transmission}
                  from:
                    title: Starting node.
                    description: The resulting link technology will have `flow_out` == `import` and `flow_in` == `export` at this node.
                    type: string
                  to:
                    title: Ending node.
                    description: The resulting link technology will have `flow_out` == `import` and `flow_in` == `export` at this node.
                    type: string

        patternProperties: &pattern_def
          '^(cost_[\w]+)$':
            $ref: "#/$defs/TechCostNullNumber"
        unevaluatedProperties: &uneval_def
          oneOf:
            - $ref: "#/$defs/unIndexedParamVal"
            - type: object
              description: Indexed tech-level parameter with any dtype.
              additionalProperties: false
              required: ["data", "index", "dims"]
              properties:
                data:
                  $ref: "#/$defs/IndexedParamData"
                index:
                  $ref: "#/$defs/IndexedParamIndex"
                dims:
                  $ref: "#/$defs/TechDims"

        properties:
          active:
            $ref: "#/$defs/ActiveDef"

          color:
            type: ["null", string]
            default: .nan
            description: Color that can be used when plotting results.
            x-type: str

          name:
            type: ["null", string]
            x-resample_method: first
            x-type: str
            title: Technology long-name.
            description: Long name of technology, which can be used in post-processing (e.g., plotting).
            default: .nan

  nodes:
    type: object
    description: Calliope model node definitions.
    additionalProperties: false
    patternProperties:
      '^[^_^\d][\w]*$':
        type: object
        title: A named node.

        patternProperties: *pattern_def
        unevaluatedProperties: *uneval_def
        properties:
          active:
            $ref: "#/$defs/ActiveDef"
          latitude:
            type: number
            x-type: float
            title: Latitude (WGS84 / EPSG4326).
            minimum: -90
            maximum: 90
          longitude:
            type: number
            x-type: float
            title: Longitude (WGS84 / EPSG4326).
            minimum: -180
            maximum: 180
