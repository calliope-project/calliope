# This file contains overrides for model.yaml

##
# WARNING: When adding tests for new constraints, we now
# want to create separate models, as in the example of
# `model_demand_share.yaml`, which can double as minimal
# working examples of the given functionality.
##

overrides:
  simple_supply:
    nodes:
      a:
        techs:
          test_supply_elec:

      b:
        techs:
          test_supply_elec:

  simple_supply_locations:
    locations:
      a:
        techs:
          test_supply_elec:

      b:
        techs:
          test_supply_elec:

  simple_supply_plus: # does not have a solution
    data_sources:
      supply_plus_resource:
        source: data_sources/supply_plus_resource.csv
        rows: timesteps
        columns: nodes
        add_dims:
          parameters: source_use_max
          techs: test_supply_plus

  simple_supply_and_supply_plus:
    data_sources:
      supply_plus_resource:
        source: data_sources/supply_plus_resource.csv
        rows: timesteps
        columns: nodes
        add_dims:
          parameters: source_use_max
          techs: test_supply_plus

    nodes:
      a.techs.test_supply_elec:
      b.techs.test_supply_elec:

  supply_and_supply_plus_milp:
    data_sources:
      supply_plus_resource:
        source: data_sources/supply_plus_resource.csv
        rows: timesteps
        columns: nodes
        select:
          nodes: a
        add_dims:
          parameters: source_use_max
          techs: test_supply_plus

    nodes:
      a:
        techs:
          test_supply_elec:
          test_supply_plus:
            cap_method: integer
            integer_dispatch: true
            purchased_units_max: 1
            cost_purchase:
              data: 1
              index: monetary
              dims: costs
            cost_flow_cap:
              data: 0
              index: monetary
              dims: costs

    templates.test_transmission.active: false

  supply_purchase:
    nodes:
      a:
        techs:
          test_supply_elec:
            cap_method: integer
            purchased_units_max: 1
            cost_purchase:
              data: 1
              index: monetary
              dims: costs
            cost_flow_cap:
              data: 0
              index: monetary
              dims: costs

    templates.test_transmission.active: false

  supply_milp:
    techs:
      test_supply_elec:
        cap_method: integer
        integer_dispatch: true
        purchased_units_max: 1
        flow_cap_per_unit: 15
        flow_cap_max: null
    nodes:
      a:
        techs:
          test_supply_elec:
      b.active: false
    templates.test_transmission.active: false

  supply_export:
    techs:
      test_supply_elec:
        carrier_carrier: electricity
        cost_export:
          data: 0.01
          index: monetary
          dims: costs
    nodes:
      a:
        techs:
          test_supply_elec:

      b:
        techs:
          test_supply_elec:

  simple_conversion:
    data_sources:
      demand_heat:
        source: data_sources/demand_heat.csv
        rows: timesteps
        columns: nodes
        add_dims:
          parameters: sink_use_equals
          techs: test_demand_heat

    nodes:
      a:
        techs:
          test_supply_elec:
          test_supply_gas:
          test_conversion:

      b:
        techs:
          test_supply_elec:
          test_supply_gas:
          test_conversion:

  conversion_and_conversion_plus:
    data_sources:
      demand_heat:
        source: data_sources/demand_heat.csv
        rows: timesteps
        columns: nodes
        select:
          nodes: a
        add_dims:
          parameters: sink_use_equals
          techs: test_demand_heat

    nodes:
      a:
        techs:
          test_supply_elec:
          test_supply_gas:
          test_supply_coal:
          test_conversion:
          test_conversion_plus:

    templates.test_transmission.active: false

  conversion_plus_milp:
    data_sources:
      demand_heat:
        source: data_sources/demand_heat.csv
        rows: timesteps
        columns: nodes
        select:
          nodes: a
        add_dims:
          parameters: sink_use_equals
          techs: test_demand_heat

    techs:
      test_conversion_plus:
        cap_method: integer
        integer_dispatch: true
        purchased_units_max: 2
        flow_cap_per_unit: 15
        flow_cap_max:
          _REPLACE_: null
    nodes:
      a:
        techs:
          test_supply_elec:
          test_supply_gas:
          test_conversion_plus:

    templates.test_transmission.active: false

  conversion_milp:
    data_sources:
      demand_heat:
        source: data_sources/demand_heat.csv
        rows: timesteps
        columns: nodes
        select:
          nodes: a
        add_dims:
          parameters: sink_use_equals
          techs: test_demand_heat
    techs:
      test_conversion:
        cap_method: integer
        integer_dispatch: true
        purchased_units_max: 1
    nodes:
      a:
        techs:
          test_supply_elec:
          test_supply_gas:
          test_conversion:

    templates.test_transmission.active: false

  conversion_plus_purchase:
    data_sources:
      demand_heat:
        source: data_sources/demand_heat.csv
        rows: timesteps
        columns: nodes
        select:
          nodes: a
        add_dims:
          parameters: sink_use_equals
          techs: test_demand_heat
    nodes:
      a:
        techs:
          test_supply_elec:
          test_supply_gas:
          test_conversion_plus:
            cap_method: integer
            purchased_units_max: 1
            cost_purchase:
              data: 1
              index: monetary
              dims: costs

    templates.test_transmission.active: false

  simple_conversion_plus:
    data_sources:
      demand_heat:
        source: data_sources/demand_heat.csv
        rows: timesteps
        columns: nodes
        select:
          nodes: a
        add_dims:
          parameters: sink_use_equals
          techs: test_demand_heat
    nodes:
      a:
        techs:
          test_supply_elec:
          test_supply_gas:
          test_supply_coal:
          test_conversion_plus:

    templates.test_transmission.active: false

  simple_chp:
    data_sources:
      demand_heat:
        source: data_sources/demand_heat.csv
        rows: timesteps
        columns: nodes
        select:
          nodes: a
        add_dims:
          parameters: sink_use_equals
          techs: test_demand_heat
    nodes:
      a:
        techs:
          test_supply_elec:
          test_supply_gas:
          test_chp:

    templates.test_transmission.active: false

  fuel_distribution:
    techs:
      test_conversion:
        carrier_in: [gas, coal]
        carrier_out: electricity
    nodes:
      a:
        template: init_nodes
        techs:
          test_conversion:
            cost_flow_in:
              data: [1, 2]
              index: [[monetary, coal], [monetary, gas]]
              dims: [costs, carriers]
      b:
        template: init_nodes

    templates.test_transmission.active: false
    templates:
      init_nodes:
        techs:
          test_demand_elec:
          test_supply_gas:
          test_supply_coal:
          test_conversion:
          test_demand_coal:

  simple_storage:
    nodes:
      a:
        techs:
          test_supply_elec:
          test_storage:

      b:
        techs:
          test_supply_elec:
          test_storage:

  storage_discharge_depth:
    techs:
      test_storage:
        storage_discharge_depth: 0.8

  storage_milp:
    nodes:
      a:
        techs:
          test_supply_elec:
          test_storage:
            cap_method: integer
            integer_dispatch: true
            purchased_units_max: 2
            flow_cap_max: null
            flow_cap_per_unit: 10
            storage_cap_per_unit: 15

    templates.test_transmission.active: false

  storage_purchase:
    nodes:
      a:
        techs:
          test_supply_elec:
          test_storage:
            cap_method: integer
            purchased_units_max: 1
            cost_purchase:
              data: 1
              index: monetary
              dims: costs

    templates.test_transmission.active: false

  spores:
    config:
      build.mode: spores
      solve:
        spores_score_cost_class: "spores_score"
        spores_number: 3
      parameters:
        spores_slack: 0.1
        objective_cost_weights:
          data: [1, 0]
          index: ["monetary", "spores_score"]

    techs.test_supply_elec:
      cost_flow_cap:
        data: [10, 0]
        index: [monetary, spores_score]
        dims: costs
      cost_interest_rate:
        data: [0.1, 0]
        index: [monetary, spores_score]
        dims: costs
      lifetime: 1

  empty_tech_node:
    nodes.c.techs:
  one_day:
    config.init.time_subset: ["2005-01-01", "2005-01-01"]

  two_hours:
    config.init.time_subset: ["2005-01-01 00:00:00", "2005-01-01 01:00:00"]

  resample_two_days:
    config:
      init:
        time_subset: ["2005-01-01", "2005-01-02"]
        time_resample: 24h

  operate:
    config.build.mode: operate
    config.init.time_subset: ["2005-01-01", "2005-01-02"]
    config.build.ensure_feasibility: true
    config.build.operate_window: 6h
    config.build.operate_horizon: 12h

  investment_costs:
    templates:
      test_controller:
        lifetime: 25
        cost_interest_rate:
          data: 0.1
          index: monetary
          dims: costs
        cost_flow_cap:
          data: 10
          index: monetary
          dims: costs

  var_costs:
    templates:
      test_controller:
        cost_flow_out:
          data: 0.1
          index: monetary
          dims: costs

  demand_elec_max:
    data_sources:
      demand_elec:
        add_dims:
          parameters: sink_use_max

  shadow_prices:
    config.solve.shadow_prices: ["system_balance", "balance_demand"]

  shadow_prices_invalid_constraint:
    config.solve.shadow_prices: ["flow_cap_max_foobar"]
