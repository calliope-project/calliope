# Set per-timestep variations in limits to out/inflows, which would otherwise be limited by a static value.
# For example, `flow_cap` can be made to fluctuate per timestep above/below its rated value.
# User-defined timeseries parameters need to be in the model inputs for these constraints.
# This can be achieved by defining them for each relevant technology in your YAML and linking it to a CSV file (e.g., `techs.my_tech.constraints.flow_cap_max_relative_per_ts: file=my_file.csv`).

# New top-level parameters:
# flow_cap_max_relative_per_ts
# storage_max_relative_per_ts

# helper functions used:
# reduce_carrier_dim (expression)

constraints:
  max_time_varying_flow_cap:
    description: Limit flow out in each hour according to a time varying fractional limit that is multiplied by the technology flow cap. This represents, for instance, the impact of outdoor temperature on the maximum output of a technology relative to its rated max output.
    foreach: [nodes, techs, timesteps]
    where: "flow_cap_max_relative_per_ts"
    equations:
      - expression: "reduce_carrier_dim(flow_out, carrier_tier=out) <= flow_cap_max_relative_per_ts * flow_cap"

  max_time_varying_storage:
    description: Limit flow out of a storage device in each hour according to a time varying fractional limit that is multiplied by the technology stored carrier. This represents, for instance, the inability to use all stored energy in a storage device as it is reserved for potential use in a context outside the system boundaries.
    foreach: [nodes, techs, timesteps]
    where: "storage_max_relative_per_ts"
    equations:
      - expression: "reduce_carrier_dim(flow_out, carrier_tier=out) <= storage_max_relative_per_ts * storage"
