# Force upper limit on carrier imports within nodes or across all nodes as a share of all carrier flows at a node/across nodes.
# Imports of transmission technologies are defined by `flow_out` (outflow from a transmission technology that originated in a remote node).

constraints:
  net_import_share_max:
    description: Limit upper bound on electricity imports within nodes as a share of all electricity flows at each node.
    foreach: [nodes, timesteps]
    where: "defined(techs=test_transmission_elec, within=nodes, how=any)"
    equations:
      - expression: net_import_share * sum(flow_out[techs=$transmission_techs, carriers=electricity], over=techs) <= $total_energy_balance
    sub_expressions:
      total_energy_balance:
        - expression: sum(flow_out[carriers=electricity], over=techs) - sum(flow_in[carriers=electricity], over=techs)
    slices:
      transmission_techs:
        - expression: get_transmission_techs(test_transmission_elec)

  net_annual_import_share_max:
    description: Limit upper bound on annual electricity imports within nodes as a share of all electricity flows at each node.
    foreach: [nodes]
    where: "defined(techs=test_transmission_elec, within=nodes, how=any)"
    equations:
      - expression: net_import_share * sum(flow_out[techs=$transmission_techs, carriers=electricity], over=[techs, timesteps]) <= $total_energy_balance
    sub_expressions:
      total_energy_balance:
        - expression: sum(flow_out[carriers=electricity], over=[techs, timesteps]) - sum(flow_in[carriers=electricity], over=[techs, timesteps])
    slices:
      transmission_techs:
        - expression: get_transmission_techs(test_transmission_elec)

  net_annual_import_share_max_node_group:
    description: Limit upper bound on annual heat imports across two nodes in the model as a share of combined heat flows in both nodes.
    equations:
      - expression: net_import_share * sum(flow_out[techs=$transmission_techs, nodes=$node_group, carriers=$carrier], over=[nodes, techs, timesteps]) <= $total_energy_balance
    sub_expressions:
      total_energy_balance:
        - expression: sum(flow_out[nodes=$node_group, carriers=$carrier], over=[nodes, techs, timesteps]) - sum(flow_in[nodes=$node_group, carriers=$carrier], over=[nodes, techs, timesteps])
    slices:
      transmission_techs:
        - expression: get_transmission_techs(test_transmission_heat)
      node_group:
        - expression: "[a, c]"
      carrier:
        - expression: heat