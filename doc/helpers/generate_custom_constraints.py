# Copyright (C) since 2013 Calliope contributors listed in AUTHORS.
# Licensed under the Apache 2.0 License (see LICENSE file).

"""
generate_custom_constraints.py
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Generates an `.rst` file listing all custom constraints.

"""

from io import StringIO
from pathlib import Path

import ruamel.yaml as yaml

RST_BASE_STRING = """
..
   Note: this file is automatically generated in `generate_custom_constraints.py`.


.. _custom_math_examples:

====================
Custom math examples
====================

This section lists a range of examples built using custom math functionality.

.. warning::
   These constraints are tested in a limited fashion and it is up to you, the user, to make sure you understand the maths when you apply them to your own model!

"""

RST_EXAMPLE_STRING = """
{title_lines}
{title}
{title_lines}

{description}

.. code-block:: yaml
{example_yaml}
"""


def process():
    custom_math_dir = Path("_static/custom_math")

    rst_string = RST_BASE_STRING

    for yaml_file in sorted(custom_math_dir.glob("*.yaml")):
        rst_string = rst_string + process_file(yaml_file)

    with open("_generated/custom_math_examples.rst", "w") as f:
        f.write(rst_string)


def process_file(path):
    with open(path, "r") as f:
        text = f.read()

    comment_, yaml_ = text.split("# ---", 1)
    comment_yaml_block = "\n".join(i.removeprefix("#") for i in comment_.split("\n"))

    comment_yaml = yaml.safe_load(StringIO(comment_yaml_block))

    title = comment_yaml["title"]
    title_lines = "-" * len(title)

    description = comment_yaml.get("description", "")

    example_yaml = "\n".join(["   " + i for i in yaml_.split("\n")])

    return RST_EXAMPLE_STRING.format(
        title_lines=title_lines,
        title=title,
        description=description,
        example_yaml=example_yaml,
    )
