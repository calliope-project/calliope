# Structure of this file:
# Each major section of model / run configuration has its own top-level key.
# Within each top-level section, changes are given as ``old name: new name``,
# and if the specific setting has been removed, the new name is ``null``,
# possibly with a comment indicating

run_config:
    import: null  # use import statements in model configuration file instead
    subset_y: null
    subset_x: null
    subset_t: model.subset_time
    solver: run.solver
    solver_options: run.solver_options
    name: null
    model: null  # since there is no separate run configuration file any more, there is no need to specify a model configuration file
    mode: run.mode
    output.format: null
    output.path: null
    debug.keep_temp_files: run.save_logs
    debug.symbolic_solver_labels: null
    override: null  # now achieved with overrides and scenarios, see scenarios.yaml in examples
    parallel: null
    random_seed: model.random_seed
    debug: null  # no longer available


model_config:
    opmode: null
    startup_time: null
    name: model.name
    data_path: model.timeseries_data_path
    objective: null  # custom objective not implemented yet
    constraints: null  # custom constraints not implemented yet
    system_margin: model.reserve_margin
    group_fraction: null  # major change to structure of this constraint, not automatically converted
    metadata: null  ### SPECIAL LOGIC: move coordinates over to location configuration


tech_config:
    parent: essentials.parent
    group: null  # Use tech_groups to specify groups
    name: essentials.name
    stack_weight: null  # stack_weight is no longer supported
    color: essentials.color
    x_map: null  # now achieved by directly specifying file=filename.csv:column
    carrier: essentials.carrier
    primary_carrier: essentials.primary_carrier_out
    carrier_in: essentials.carrier_in # If conversion_plus, now a list of carrier names. Ratios between carriers found in constraints.carrier_ratios
    carrier_in_2: essentials.carrier_in_2 # If conversion_plus, now a list of carrier names. Ratios between carriers found in constraints.carrier_ratios
    carrier_in_3: essentials.carrier_in_3 # If conversion_plus, now a list of carrier names. Ratios between carriers found in constraints.carrier_ratios
    carrier_out: essentials.carrier_out # If conversion_plus, now a list of carrier names. Ratios between carriers found in constraints.carrier_ratios
    carrier_out_2: essentials.carrier_out_2 # If conversion_plus, now a list of carrier names. Ratios between carriers found in constraints.carrier_ratios
    carrier_out_3: essentials.carrier_out_3 # If conversion_plus, now a list of carrier names. Ratios between carriers found in constraints.carrier_ratios
    export: constraints.export_carrier
    constraints.r: constraints.resource
    constraints.force_r: constraints.force_resource
    constraints.r_unit: constraints.resource_unit
    constraints.r_eff: constraints.resource_eff
    constraints.r_area.min: constraints.resource_area_min
    constraints.r_area.max: constraints.resource_area_max
    constraints.r_area.equals: constraints.resource_area_equals
    constraints.r_area_per_e_cap: constraints.resource_area_per_energy_cap
    constraints.r_cap.min: constraints.resource_cap_min
    constraints.r_cap.max: constraints.resource_cap_max
    constraints.r_cap.equals: constraints.resource_cap_equals
    constraints.r_cap_equals_e_cap: constraints.resource_cap_equals_energy_cap
    constraints.r_scale: constraints.resource_scale
    constraints.r_scale_to_peak: constraints.resource_scale_to_peak
    constraints.s_init: constraints.storage_initial
    constraints.s_cap.min: constraints.storage_cap_min
    constraints.s_cap.max: constraints.storage_cap_max
    constraints.s_cap.equals: constraints.storage_cap_equals
    constraints.s_cap_per_unit: constraints.storage_cap_per_unit
    constraints.c_rate: constraints.charge_rate
    constraints.s_time.max: null
    constraints.use_s_time: null
    constraints.s_loss: constraints.storage_loss
    constraints.e_prod: constraints.energy_prod
    constraints.e_con: constraints.energy_con
    constraints.p_eff: constraints.parasitic_eff
    constraints.e_eff: constraints.energy_eff
    constraints.e_eff_per_distance: constraints.energy_eff_per_distance
    constraints.e_cap.min: constraints.energy_cap_min
    constraints.e_cap.max: constraints.energy_cap_max
    constraints.e_cap.equals: constraints.energy_cap_equals
    constraints.e_cap_total.max: constraints.energy_cap_max_systemwide
    constraints.e_cap_total.equals: constraints.energy_cap_equals_systemwide
    constraints.e_cap_scale: constraints.energy_cap_scale
    constraints.e_cap.min_use: constraints.energy_cap_min_use
    constraints.e_cap_min_use: constraints.energy_cap_min_use
    constraints.e_cap_per_unit: constraints.energy_cap_per_unit
    constraints.e_ramping: constraints.energy_ramping
    constraints.export_cap: constraints.export_cap
    constraints.export_carrier: constraints.export_carrier
    constraints.units.min: constraints.units_min
    constraints.units.max: constraints.units_max
    constraints.units.equals: constraints.units_equals
    constraints.r_scale_to_peak: null
    constraints.allow_r2: null
    constraints.r2_startup_only: null
    constraints.r2_eff: null
    constraints.r2_cap.min: null
    constraints.r2_cap.max: null
    constraints.r2_cap.equals: null
    constraints.r2_cap_follow: null
    constraints.r2_cap_follow_mode: null
    constraints.s_time.max: null
    weight: null
    per_distance: null


tech_constraints_per_distance_config:
    e_loss: constraints.energy_eff_per_distance


tech_costs_config:
    s_cap: storage_cap
    r_area: resource_area
    r_cap: resource_cap
    r2_cap: null
    e_cap: energy_cap
    om_frac: om_annual_investment_fraction
    om_fixed: om_annual
    om_var: om_prod
    om_fuel: om_con
    export: export
    purchase: purchase


tech_costs_per_distance_config:
    e_cap: energy_cap_per_distance


location_config:
    override: techs
    techs: null # List as keys of the subdict 'techs'
    within: null


###


depreciation_config:  # manually processed in convert.py, listed here for completeness
    plant_life: constraints.lifetime
    interest: costs.{cost_class}.interest_rate
